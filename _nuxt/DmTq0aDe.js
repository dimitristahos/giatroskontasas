const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./UG0fotyJ.js","./CC-bkdpn.js"])))=>i.map(i=>d[i]);
import{x as p}from"./CC-bkdpn.js";import{c as d,a as w,m as h,t as m}from"./DCBkylwH.js";import"./BTObPsCF.js";async function b(t,e){return await $fetch(`/api/content/${e}/database.sql`,{context:{},responseType:"text",headers:{"content-type":"text/plain"},query:{v:d[String(e)],t:void 0}})}async function g(t,e="gzip"){var s;const n=Uint8Array.from(atob(t),i=>i.charCodeAt(0)),o=(s=new Response(new Blob([n])).body)==null?void 0:s.pipeThrough(new DecompressionStream(e));return(await new Response(o).text()).split(`
`)}function l(t,e){const n=S(t),a={...e};for(const o of n)a[o]&&a[o]!=="undefined"&&(a[o]=JSON.parse(a[o]));for(const o in a)a[o]==="NULL"&&(a[o]=void 0);return a}function S(t){const e=t.match(/FROM\s+(\w+)/);if(!e)return[];const n=w[y(e[1])];return(n==null?void 0:n.jsonFields)||[]}function y(t){return t.replace(/^_content_/,"")}let r;function k(t){return{all:async(e,n)=>(await f(t),r.exec({sql:e,bind:n,rowMode:"object",returnValue:"resultRows"}).map(a=>l(e,a))),first:async(e,n)=>(await f(t),l(e,r.exec({sql:e,bind:n,rowMode:"object",returnValue:"resultRows"}).shift())),exec:async e=>{await f(t),await r.exec({sql:e})}}}async function f(t){const e=h();if(!r){const i=await(await p(()=>import("./UG0fotyJ.js"),__vite__mapDeps([0,1]),import.meta.url).then(u=>u.default))();e.tick("Import SQLite Module"),r=new i.oo1.DB}if(window.sessionStorage.getItem("previewToken"))return r;let n=null;const a=`checksum_${t}`,o=`collection_${t}`;let c="matched";try{const s=r.exec({sql:`SELECT * FROM ${m.info} where id = '${a}'`,rowMode:"object",returnValue:"resultRows"}).shift();(s==null?void 0:s.version)!==d[String(t)]&&(c="mismatch")}catch{c="missing"}if(c!=="matched"){if(window.localStorage.getItem(`content_${a}`)===d[String(t)]&&(n=window.localStorage.getItem(`content_${o}`)),e.tick("Get Local Cache"),!n){n=await b(void 0,String(t)),e.tick("Download Database");{try{window.localStorage.setItem(`content_${a}`,d[String(t)]),window.localStorage.setItem(`content_${o}`,n)}catch(i){console.error("Database integrity check failed, rebuilding database",i)}e.tick("Store Database")}}const s=await g(n);e.tick("Decompress Database"),await r.exec({sql:`DROP TABLE IF EXISTS ${m[String(t)]}`}),c==="mismatch"&&await r.exec({sql:`DELETE FROM ${m.info} WHERE id = '${a}'`});for(const i of s)try{await r.exec(i)}catch(u){console.error("Error executing command",u)}e.tick("Restore Dump")}return e.end("Database Loaded"),r}export{k as loadDatabaseAdapter};
